#!/usr/bin/env zunit

@setup {
    if [[ ! -d "$HOME/.virtualenvs/foobar/" ]]; then
        echo "Creating test virtualenv"
        run virtualenv "$HOME/.virtualenvs/foobar" --python=python3 > /dev/null
    fi
    unset VIRTUAL_ENV
    unset AUTOSWITCH_MESSAGE_FORMAT
    PYTHON_VERSION="$(python3 --version)"

    LANG=".UTF-8"
}

@teardown {
    rm -rf "$HOME/.virtualenvs/foobar/"
}

@test 'correct version exported' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_virtualenv.plugin.zsh

    git_version="$(git tag --list | sort -V | tail -1)"
    git tag --list

    assert "$AUTOSWITCH_VERSION" is_not_empty
    assert "$AUTOSWITCH_VERSION" same_as "$git_version"
}


@test 'plugin - does nothing if switching to directory without .venv' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_virtualenv.plugin.zsh

    TEMP_DIR="$(mktemp -d)"

    run cd "$TEMP_DIR"

    assert $status equals 0
    assert "$output" is_empty
}

@test 'plugin - switches env when .venv found' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_virtualenv.plugin.zsh
    # zsh-hook precmd does not seem to work correctly in tests
    # so we need to manually enable the plugin
    enable_autoswitch_virtualenv

    TEMP_DIR="$(mktemp -d)"
    virtualenv "$TEMP_DIR/.venv"
    chmod 700 "$TEMP_DIR/.venv"

    run cd "$TEMP_DIR"

    assert $status equals 0
    assert "$output" same_as "Switching virtualenv: \e[1m\e[35m$(basename "$TEMP_DIR")\e[0m \e[32m[üêç$PYTHON_VERSION]\e[0m"

    mkdir "$TEMP_DIR/foo"

    # switches even in project subdirectories
    run cd "$TEMP_DIR/foo"

    assert $status equals 0
    assert "$output" same_as "Switching virtualenv: \e[1m\e[35m$(basename "$TEMP_DIR")\e[0m \e[32m[üêç$PYTHON_VERSION]\e[0m"
}
